var C = {
    ASSETS:{
        NONE:0,
        BALL:1,
        BLOCK:2,
        WALL:3,
        GROUND:4,
        PLAYER:5,
        SHOT:6
    },   
    GAMEMODE:
    {
        GETREADY:0,
        GO:1,
        INPLAY:2,
        LEVELENDING:3,
        LEVELEND:4,
        GAMEWON:5,
        GAMEOVER:6
    }
}

var GAMEOBJ = [
    {
        src:'block16',
        t:2,
        w:16,
        h:16,
        d:16,
        f:0.2,
        r:0.2
    },
    {
        src:'block32',
        t:2,
        w:32,
        h:32,
        d:16,
        f:0.2,
        r:0.2
    },
    {
        src:'brick16',
        t:2,
        w:16,
        h:16,
        d:0,
        f:0.2,
        r:0.2
    },
    {
        src:'brick32',
        t:2,
        w:32,
        h:32,
        d:0,
        f:0.2,
        r:0.2
    },
    {
        src:'box16',
        t:2,
        w:16,
        h:16,
        d:8,
        f:0.2,
        r:0.2
    },
    {
        src:'box32',
        t:2,
        w:32,
        h:32,
        d:8,
        f:0.2,
        r:0.2
    },
    {
        src:'brick10h',
        t:2,
        w:160,
        h:16,
        d:16,
        f:0.2,
        r:0.2
    },
    {
        src:'ball16',
        t:1,
        w:8,
        h:8,
        d:8,
        f:0.8,
        r:0.8
    },
    {
        src:'ball32',
        t:1,
        w:16,
        h:16,
        d:8,
        f:0.8,
        r:0.8
    }
];

var FONT = {    
    'A': [
        [, 1, 0],
        [1, , 1],
        [1, 1, 1],
        [1, , 1],
        [1, , 1]
    ],
    'B': [
        [1, 1, 0],
        [1, , 1],
        [1, 1, 1],
        [1, , 1],
        [1, 1,0]
    ],
    'C': [
        [1, 1, 1],
        [1,0,0],
        [1,0,0],
        [1,0,0],
        [1, 1, 1]
    ],
    'D': [
        [1, 1,0],
        [1, , 1],
        [1, , 1],
        [1, , 1],
        [1, 1,0]
    ],
    'E': [
        [1, 1, 1],
        [1,0,0],
        [1, 1, 1],
        [1,0,0],
        [1, 1, 1]
    ],
    'F': [
        [1, 1, 1],
        [1,0,0],
        [1, 1,1],
        [1,0,0],
        [1,0,0]
    ],
    'G': [
        [, 1, 1,0],
        [1,0,0,0],
        [1, , 1, 1],
        [1, , , 1],
        [, 1, 1,0]
    ],
    'H': [
        [1, , 1],
        [1, , 1],
        [1, 1, 1],
        [1, , 1],
        [1, , 1]
    ],
    'I': [
        [1, 1, 1],
        [, 1,0],
        [, 1,0],
        [, 1,0],
        [1, 1, 1]
    ],
    'J': [
        [1, 1, 1],
        [, , 1],
        [, , 1],
        [1, , 1],
        [1, 1, 1]
    ],
    'K': [
        [1, , , 1],
        [1, , 1,0],
        [1, 1,0,0],
        [1, , 1,0],
        [1, , , 1]
    ],
    'L': [
        [1,0,0],
        [1,0,0],
        [1,0,0],
        [1,0,0],
        [1, 1, 1]
    ],
    'M': [
        [1,1,1,1],
        [1,0,1,1],
        [1,0,1,1],
        [1,0,0,1],
        [1,0,0,1]
    ],
    'N': [
        [1, , , 1],
        [1, 1, , 1],
        [1, , 1, 1],
        [1, , , 1],
        [1, , , 1]
    ],
    'O': [
        [1, 1, 1],
        [1, , 1],
        [1, , 1],
        [1, , 1],
        [1, 1, 1]
    ],
    'P': [
        [1, 1, 1],
        [1, , 1],
        [1, 1, 1],
        [1,0,0],
        [1,0,0]
    ],
    'Q': [
        [0, 1, 1,0],
        [1, , , 1],
        [1, , , 1],
        [1, , 1, 1],
        [1, 1, 1, 1]
    ],
    'R': [
        [1, 1,0],
        [1, , 1],
        [1, , 1],
        [1, 1,0],
        [1, , 1]
    ],
    'S': [
        [1, 1, 1],
        [1,0,0],
        [1, 1, 1],
        [, , 1],
        [1, 1, 1]
    ],
    'T': [
        [1,1,1],
        [,1,0],
        [,1,0],
        [,1,0],
        [,1,0]
    ],
    'U': [
        [1,,1],
        [1,,1],
        [1,,1],
        [1,,1],
        [1,1,1]
    ],
    'V': [
        [1,,1],
        [1,,1],
        [1,,1],
        [1,,1],
        [0,1,0]
    ],
    'W': [
        [1,,,1],
        [1,,,1],
        [1,,,1],
        [1,,1,1],
        [1,1,1,1]
    ],
    'X': [
        [1,0,1],
        [1,0,1],
        [0,1,0],
        [1,0,1],
        [1,0,1]
    ],
    'Y': [
        [1, , 1],
        [1, , 1],
        [, 1,0],
        [, 1,0],
        [, 1,0]
    ],
    'Z': [
        [1, 1, 1],
        [, , 1],
        [, 1,0],
        [1,0,0],
        [1, 1, 1]
    ],
    '0': [
        [1,1,1],
        [1,,1],
        [1,,1],
        [1,,1],
        [1,1,1]
    ],
    '1': [
        [,1,0],
        [,1,0],
        [,1,0],
        [,1,0],
        [,1,0]
    ],
    '2': [
        [1,1,1],
        [0,0,1],
        [1,1,1],
        [1,0,0],
        [1,1,1]
    ],
    '3':[
        [1,1,1],
        [0,0,1],
        [1,1,1],
        [0,0,1],
        [1,1,1]
    ],
    '4':[
        [1,0,1],
        [1,0,1],
        [1,1,1],
        [0,0,1],
        [0,0,1]
    ],
    '5':[
        [1,1,1],
        [1,0,0],
        [1,1,1],
        [0,0,1],
        [1,1,1]
    ],
    '6':[
        [1,1,1],
        [1,0,0],
        [1,1,1],
        [1,0,1],
        [1,1,1]
    ],
    '7':[
        [1,1,1],
        [0,0,1],
        [0,0,1],
        [0,0,1],
        [0,0,1]
    ],
    '8':[
        [1,1,1],
        [1,0,1],
        [1,1,1],
        [1,0,1],
        [1,1,1]
    ],
    '9':[
        [1,1,1],
        [1,0,1],
        [1,1,1],
        [0,0,1],
        [1,1,1]
    ],
    '/': [
        [,,,,1],
        [,,,1,],
        [,,1,,],
        [,1,,,],
        [1,,,,]
    ],
    '[': [
        [,1,1],
        [,1,],
        [,1,],
        [,1,],
        [,1,1]
    ],
    ']': [
        [1,1,],
        [,1,],
        [,1,],
        [,1,],
        [1,1,]
    ],
    ' ': [
        [,,],
        [,,],
        [,,],
        [,,],
        [,,]
    ],
    '?': [
        [1,1,1],
        [1,0,1],
        [0,1,1],
        [0,1,0],
        [0,1,0]
    ],
    '.': [
        [,,],
        [,,],
        [,,],
        [,,],
        [,1,]
    ],
    'Â£': [
        [0,1,1],
        [0,1,],
        [1,1,1],
        [0,1,0],
        [1,1,1]
    ],
    '+': [
        [0,0,0],
        [0,1,0],
        [1,1,1],
        [0,1,0],
        [0,0,0]
    ],
    '-': [
        [0,0,0],
        [0,0,0],
        [1,1,1],
        [0,0,0],
        [0,0,0]
    ],
    '|':
    []  //CR
};


class BlockFactory
{
    static Create(id, x, y, offset, d,f,r)
    {
        var obj = GAMEOBJ.find(o=>o.src == id);

        if(obj){
            if(obj.t==C.ASSETS.BALL){
                return new Circle(obj.t, id, 
                    new Vector2(x+offset.x, y+offset.y), 
                    obj.w, d||obj.d, f||obj.f, r||obj.r, "X");
            }
            else{
                return new Rectangle(obj.t, id, 
                    new Vector2(x+offset.x, y+offset.y), 
                    obj.w, obj.h, 
                    d!=null ? d : obj.d, 
                    f != null ? f : obj.f, 
                    r != null ? r : obj.r, "X");
            }
        }


    }
}